#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 27 #"InputMonoCompressed Medium\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 2146 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 13 #"racket/random"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"phc.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"provide"
0 0 25 3 1 #" "
0 0 14 3 5 #"Lyra2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 1 #" "
0 0 22 3 2 #"64"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"blake2b_IV"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"list->bytes"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 4 #"#x6a"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x09"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xe6"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x67"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xf3"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xbc"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xc9"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x08"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#xbb"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x67"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xae"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x85"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x84"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xca"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xa7"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x3b"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#x3c"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x6e"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xf3"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x72"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xfe"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x94"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xf8"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x2b"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#xa5"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x4f"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xf5"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x3a"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x5f"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x1d"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x36"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xf1"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#x51"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x0e"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x52"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x7f"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xad"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xe6"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x82"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xd1"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#x9b"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x05"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x68"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x8c"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x2b"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x3e"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x6c"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x1f"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#x1f"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x83"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xd9"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xab"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xfb"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x41"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xbd"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x6b"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 22 3 4 #"#x5b"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xe0"
0 0 25 3 1 #" "
0 0 22 3 4 #"#xcd"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x19"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x13"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x7e"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x21"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x79"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"bytes->vector/64"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"build-vector"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-length"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 22 3 1 #"8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"i"
0 0 25 3 3 #") ("
0 0 14 3 22 #"integer-bytes->integer"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #" ("
0 0 14 3 18 #"system-big-endian?"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"vector->bytes/64"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 3 #"len"
0 0 25 3 1 #" "
0 0 14 3 4 #"dest"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 3 #"len"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"bytes64"
0 0 25 3 2 #" ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"bytes-copy!"
0 0 25 3 1 #" "
0 0 14 3 4 #"dest"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 14 3 7 #"bytes64"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-sponge"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"bytes->vector/64"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-append"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-bytes"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 10 #"blake2b_IV"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotr64"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"bitwise-ior"
0 0 25 3 2 #" ("
0 0 14 3 16 #"arithmetic-shift"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 16 #"arithmetic-shift"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 2 #"64"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotr64"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-xor"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 22 3 2 #"32"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotr64"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-xor"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #") "
0 0 22 3 2 #"24"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotr64"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-xor"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 22 3 2 #"16"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotr64"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-xor"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #") "
0 0 22 3 2 #"63"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-and"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 18 #"#xFFFFFFFFFFFFFFFF"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-and"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 18 #"#xFFFFFFFFFFFFFFFF"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-and"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 18 #"#xFFFFFFFFFFFFFFFF"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-and"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 22 3 18 #"#xFFFFFFFFFFFFFFFF"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"blake2b"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"blake2b/reduced"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"blake_G"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pad"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-len"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-length"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 14 3 4 #"blen"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"pad-len"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"new-len"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-length"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"bytes->vector/64"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"pad-len"
0 0 25 3 2 #") "
0 0 14 3 1 #"b"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 9 #"pad-bytes"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-bytes"
0 0 25 3 1 #" "
0 0 14 3 7 #"pad-len"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 7 #"pad-len"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"bytes-set!"
0 0 25 3 1 #" "
0 0 14 3 9 #"pad-bytes"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x81"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"bytes-set!"
0 0 25 3 1 #" "
0 0 14 3 9 #"pad-bytes"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 4 #"#x80"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"bytes-set!"
0 0 25 3 1 #" "
0 0 14 3 9 #"pad-bytes"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 7 #"pad-len"
0 0 25 3 2 #") "
0 0 22 3 4 #"#x81"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 12 #"bytes-append"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 9 #"pad-bytes"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"absorb"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"loops"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 25 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 25 3 2 #") "
0 0 14 3 6 #"blen/8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 25 3 2 #" ("
0 0 14 3 23 #"exact-positive-integer?"
0 0 25 3 1 #" "
0 0 14 3 5 #"loops"
0 0 25 3 3 #") ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"absorb"
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"block"
0 0 19 3 1 #" "
0 0 19 3 6 #"length"
0 0 19 3 1 #" "
0 0 19 3 4 #"must"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 8 #"multiple"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 3 #" ~v"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 5 #"loops"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"offset"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"block-word"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"offset"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"sponge-word"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-xor"
0 0 25 3 1 #" "
0 0 14 3 10 #"block-word"
0 0 25 3 1 #" "
0 0 14 3 11 #"sponge-word"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake2b"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"absorb/reduced"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"loops"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 25 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 25 3 2 #") "
0 0 14 3 6 #"blen/8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 25 3 2 #" ("
0 0 14 3 23 #"exact-positive-integer?"
0 0 25 3 1 #" "
0 0 14 3 5 #"loops"
0 0 25 3 3 #") ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"absorb"
0 0 25 3 2 #" ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"block"
0 0 19 3 1 #" "
0 0 19 3 6 #"length"
0 0 19 3 1 #" "
0 0 19 3 4 #"must"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 8 #"multiple"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 3 #" ~v"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 5 #"loops"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"offset"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"block-word"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"offset"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"sponge-word"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 11 #"bitwise-xor"
0 0 25 3 1 #" "
0 0 14 3 10 #"block-word"
0 0 25 3 1 #" "
0 0 14 3 11 #"sponge-word"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 15 #"blake2b/reduced"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"squeeze/row"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 14 3 1 #"j"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 15 #"blake2b/reduced"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"squeeze/bytes"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"full-blocks"
0 0 25 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"rem"
0 0 25 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-bytes"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"sponge-bytes"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-bytes"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 11 #"full-blocks"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"vector->bytes/64"
0 0 17 3 1 #" "
0 0 17 3 1 #"v"
0 0 17 3 1 #" "
0 0 17 3 3 #"len"
0 0 17 3 6 #" dest)"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 16 #"vector->bytes/64"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 1 #" "
0 0 14 3 12 #"sponge-bytes"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"bytes-copy!"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 2 #") "
0 0 14 3 12 #"sponge-bytes"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"blake2b"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"vector->bytes/64"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 1 #" "
0 0 14 3 12 #"sponge-bytes"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"bytes-copy!"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 11 #"full-blocks"
0 0 25 3 1 #" "
0 0 14 3 4 #"blen"
0 0 25 3 2 #") "
0 0 14 3 12 #"sponge-bytes"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 3 #"rem"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"duplex/row/setup"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 4 #"dest"
0 0 25 3 1 #" "
0 0 14 3 3 #"src"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 14 #"absorb/reduced"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"src"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"vector-copy!"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"dest"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"duplex/row"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"duplex/row/setup"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"duplex/block"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 5 #"block"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"absorb"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 5 #"block"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"Lyra2/phc"
0 0 25 3 1 #" "
0 0 14 3 8 #"password"
0 0 25 3 1 #" "
0 0 14 3 6 #"t_cost"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 2 #" ("
0 0 14 3 19 #"crypto-random-bytes"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"hash"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Lyra2"
0 0 25 3 1 #" "
0 0 14 3 8 #"password"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 1 #" "
0 0 14 3 6 #"t_cost"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"phc"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"lyra2"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-immutable-hash"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"(("
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 6 #"t_cost"
0 0 25 3 3 #") ("
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 1 #"R"
0 0 25 3 3 #") ("
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 1 #"C"
0 0 25 3 4 #"))) "
0 0 14 3 4 #"salt"
0 0 25 3 1 #" "
0 0 14 3 4 #"hash"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"Lyra2/verify-phc"
0 0 25 3 1 #" "
0 0 14 3 3 #"phc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 2 #";("
0 0 17 3 22 #"regexp-match-positions"
0 0 17 3 1 #" "
0 0 17 3 4 #"#px\""
0 0 17 3 1 #"\\"
0 0 17 3 13 #"\\$([a-z0-9]+)"
0 0 17 3 1 #"\\"
0 0 17 3 29 #"\\$(,?([a-z0-9]+)=(-?[0-9]+))*"
0 0 17 3 1 #"\\"
0 0 17 3 18 #"\\$([a-zA-Z0-9+/]*)"
0 0 17 3 1 #"\\"
0 0 17 3 19 #"\\$([a-zA-Z0-9+/]*)\""
0 0 17 3 1 #" "
0 0 17 3 5 #"phc))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"parts"
0 0 25 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 25 3 1 #" "
0 0 14 3 3 #"phc"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"$\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"unless"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"parts"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"lyra2\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 5 #"parts"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 20 #"raise-argument-error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 12 #"Lyra2/verify"
0 0 25 3 1 #" "
0 0 19 3 33 #"\"string that came from Lyra2/phc\""
0 0 25 3 1 #" "
0 0 14 3 3 #"phc"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"params"
0 0 25 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 5 #"parts"
0 0 25 3 2 #") "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"params/table"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"make-hasheq"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 14 #"string->number"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"pair"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 12 #"string-split"
0 0 25 3 1 #" "
0 0 14 3 4 #"pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 3 #")) "
0 0 14 3 6 #"params"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 5 #"parts"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"hash"
0 0 25 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 25 3 1 #" "
0 0 14 3 5 #"parts"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"values"
0 0 25 3 1 #" "
0 0 14 3 12 #"params/table"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 1 #" "
0 0 14 3 4 #"hash"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Lyra2"
0 0 25 3 1 #" "
0 0 14 3 8 #"password"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 1 #" "
0 0 14 3 6 #"t_cost"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"password-bytes"
0 0 25 3 2 #" ("
0 0 14 3 19 #"string->bytes/utf-8"
0 0 25 3 1 #" "
0 0 14 3 8 #"password"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-sponge"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"params"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-append"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-length"
0 0 25 3 1 #" "
0 0 14 3 14 #"password-bytes"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-length"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 1 #" "
0 0 14 3 6 #"t_cost"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 22 #"integer->integer-bytes"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"absorb"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pad"
0 0 25 3 2 #" ("
0 0 14 3 12 #"bytes-append"
0 0 25 3 1 #" "
0 0 14 3 14 #"password-bytes"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 1 #" "
0 0 14 3 6 #"params"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 12 #"build-vector"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 12 #"build-vector"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"col"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                          ("
0 0 14 3 11 #"make-vector"
0 0 25 3 1 #" "
0 0 14 3 6 #"blen/8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"squeeze/row"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 16 #"duplex/row/setup"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 14 3 6 #"t_cost"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"duplex/row"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 1 #"C"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 25 3 2 #" ("
0 0 14 3 12 #"duplex/block"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 14 3 3 #"col"
0 0 25 3 3 #")) "
0 0 14 3 1 #"R"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"absorb"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pad"
0 0 25 3 1 #" "
0 0 14 3 4 #"salt"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 13 #"squeeze/bytes"
0 0 25 3 1 #" "
0 0 14 3 6 #"sponge"
0 0 25 3 1 #" "
0 0 14 3 6 #"outlen"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0           0
